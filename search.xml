<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Deepin安装VNC服务</title>
    <url>/2020/12/21/Deepin%E5%AE%89%E8%A3%85VNC%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="Deepin安装VNC服务"><a href="#Deepin安装VNC服务" class="headerlink" title="Deepin安装VNC服务"></a>Deepin安装VNC服务</h1><p>编写时间：2020-12-22 23:41:44</p>
<p>参考链接:<a href="https://www.cnblogs.com/jiftle/p/12928697.html" target="_blank" rel="noopener">https://www.cnblogs.com/jiftle/p/12928697.html</a></p>
<h2 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h2><h3 id="1-安装服务"><a href="#1-安装服务" class="headerlink" title="1.安装服务"></a>1.安装服务</h3><p>sudo apt-get update </p>
<p>sudo apt-get install x11vnc</p>
<h3 id="2-配置密码"><a href="#2-配置密码" class="headerlink" title="2.配置密码"></a>2.配置密码</h3><p>x11vnc -storepasswd</p>
<h3 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3.启动服务"></a>3.启动服务</h3><p>x11vnc -auth guess -once -loop -noxdamage -repeat -rfbauth ~/.vnc/passwd -rfbport 5900 -shared</p>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h3 id="下载VNC"><a href="#下载VNC" class="headerlink" title="下载VNC"></a>下载VNC</h3><p>链接:<a href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="noopener">https://www.realvnc.com/en/connect/download/viewer/</a><br><img src="/images/vnc_server.png" alt=""></p>
]]></content>
      <categories>
        <category>问题</category>
      </categories>
      <tags>
        <tag>问题 教程</tag>
      </tags>
  </entry>
  <entry>
    <title>MyFirstBlog</title>
    <url>/2020/01/26/MyFirstBlog/</url>
    <content><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><a id="more"></a>
<ul>
<li>列表1</li>
<li>列表2<br>  a 子列表<br>  b 子列表</li>
<li>列表3</li>
</ul>
<p><a href="https://github.com/Teemoo123" target="_blank" rel="noopener">插入超链接Github</a></p>
<p><img src="/images/bodatui.jpg" alt="插入图片"></p>
<h2 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h2><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong><em>粗斜体文本</em></strong></p>
<h2 id="分隔线样式"><a href="#分隔线样式" class="headerlink" title="分隔线样式"></a>分隔线样式</h2><hr>
<hr>
<hr>
<hr>
<hr>
<h2 id="删除线样式"><a href="#删除线样式" class="headerlink" title="删除线样式"></a>删除线样式</h2><p>RUNOOB.COM<br>GOOGLE.COM<br><del>BAIDU.COM</del></p>
<h2 id="下划线样式"><a href="#下划线样式" class="headerlink" title="下划线样式"></a>下划线样式</h2><p><u>带下划线文本</u></p>
<h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>创建脚注格式类似这样[^RUNOOB]。</p>
<p>[^RUNOOB]: 菜鸟教程 – 学的不仅是技术，更是梦想！！！</p>
]]></content>
      <categories>
        <category>demo</category>
      </categories>
      <tags>
        <tag>导航</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/12/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>SSH key的生成.md</title>
    <url>/2020/12/24/SSH-key%E7%9A%84%E7%94%9F%E6%88%90/</url>
    <content><![CDATA[<h2 id="1-检查SSH-keys是否存在"><a href="#1-检查SSH-keys是否存在" class="headerlink" title="1.检查SSH keys是否存在"></a>1.检查SSH keys是否存在</h2><p>输入下面的命令，如果有文件id_rsa.pub 或 id_dsa.pub，则直接进入步骤3将SSH key添加到GitHub中，否则进入第二步生成SSH key</p>
<pre><code class="shell">ls -al ~/.ssh
# Lists the files in your .ssh directory, if they exist</code></pre>
<h2 id="2-生成新的ssh-key"><a href="#2-生成新的ssh-key" class="headerlink" title="2. 生成新的ssh key"></a>2. 生成新的ssh key</h2><p>第一步：生成public/private rsa key pair<br>在命令行中输入</p>
<pre><code class="shell">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code></pre>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>ssh 问题 小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>pages无法访问</title>
    <url>/2020/12/24/pages%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<h2 id="github-pages无法访问"><a href="#github-pages无法访问" class="headerlink" title="github pages无法访问"></a>github pages无法访问</h2><p>参考连接：<img src="https://blog.csdn.net/q764424567/article/details/108204240" alt=""></p>
<h3 id="1-问题原因"><a href="#1-问题原因" class="headerlink" title="1.问题原因"></a>1.问题原因</h3><p>经常访问github 的小伙伴都知道，这个通常是域名解析的问题，DNS解析</p>
<p>然后我就ping了一下这个地址：<br><img src="/images/github_pages_1.png" alt="插入图片"><br>发现DNS都被解析为127.0.0.1，怪不得无法访问呢，具体原因咱不知道，但是解决方案就很简单了</p>
<h3 id="2-解决方案"><a href="#2-解决方案" class="headerlink" title="2.解决方案"></a>2.解决方案</h3><p>去<img src="https://www.ipaddress.com/" alt="">输入Teemoo123.github.com查询到真实IP地址<br><img src="/images/github_pages_2.png" alt="插入图片"><br>随便选一个地址，我通常选最上面的，然后修改host文件：</p>
<p>Windows系统下，找到C:\Windows\System32\drivers\etc这个目录下的hosts文件<br><img src="/images/github_pages_3.png" alt="插入图片"><br>用文字编辑软件打开hosts文件：<br><img src="/images/github_pages_4.png" alt="插入图片"></p>
]]></content>
      <tags>
        <tag>github 问题</tag>
      </tags>
  </entry>
  <entry>
    <title>换电脑后重新布置hexo遇到的问题</title>
    <url>/2020/12/21/%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E9%87%8D%E6%96%B0%E5%B8%83%E7%BD%AEhexo%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="1-npm-ERR-code-EACCES"><a href="#1-npm-ERR-code-EACCES" class="headerlink" title="1.npm ERR! code EACCES"></a>1.npm ERR! code EACCES</h2><p><img src="/images/Error_code_EACCES.png" alt=""><br>前面加sodo命令，用管理员权限运行</p>
<h2 id="2-npm-ERR-Unexpected-end-of-JSON-input-while"><a href="#2-npm-ERR-Unexpected-end-of-JSON-input-while" class="headerlink" title="2.npm ERR! Unexpected end of JSON input while"></a>2.npm ERR! Unexpected end of JSON input while</h2><p>parsing near ‘…2.3”:{“name”:”hexo-re’<br>参考链接：<a href="https://blog.csdn.net/zsl15039718107/article/details/104128166/" target="_blank" rel="noopener">https://blog.csdn.net/zsl15039718107/article/details/104128166/</a><br><img src="/images/Error_Switch_to_Taobao_mirror.png" alt=""></p>
<h3 id="1-清除缓存"><a href="#1-清除缓存" class="headerlink" title="1.清除缓存"></a>1.清除缓存</h3><pre><code class="shell">npm cache clean --force</code></pre>
<h3 id="2-切换为淘宝镜像"><a href="#2-切换为淘宝镜像" class="headerlink" title="2.切换为淘宝镜像"></a>2.切换为淘宝镜像</h3><pre><code class="shell">npm config set registry https://registry.npm.taobao.org/
npm config get registry https://registry.npm.taobao.org/</code></pre>
<p>验证时候切换淘宝镜像成功，命令行输入: npm config list<br><img src="/images/Switch_to_Taobao_mirror.png" alt=""></p>
<h3 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h3><pre><code class="shell">npm install</code></pre>
<p>注意：下面走捷径啦！！！！<br>直接输入：</p>
<pre><code class="shell">npm install --global cnpm</code></pre>
<p>然后使用：</p>
<pre><code class="shell">cnpm install</code></pre>
<p>执行上面命令后，发现问题解决！！！<br><strong>最简单解决就是输入</strong> npm install –global cnpm 然后使用 cnpm install 装包<br><strong>原因分析：<br>npm官方服务器在国外，网络受阻性大、而淘宝的cnpm在国内，所以用淘宝的快就ok了</strong></p>
]]></content>
      <categories>
        <category>问题</category>
      </categories>
      <tags>
        <tag>教程 问题</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux新建软连接</title>
    <url>/2020/12/24/Linux%E6%96%B0%E5%BB%BA%E8%BD%AF%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<h2 id="Linux新建软连接"><a href="#Linux新建软连接" class="headerlink" title="Linux新建软连接"></a>Linux新建软连接</h2><p>ln -s 源文件 目标文件</p>
<pre><code class="shell">ln -s ~/code/ c</code></pre>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>vim翻页命令</title>
    <url>/2020/12/21/vim%E7%BF%BB%E9%A1%B5%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="vim翻页命令"><a href="#vim翻页命令" class="headerlink" title="vim翻页命令"></a>vim翻页命令</h2><h3 id="整页翻"><a href="#整页翻" class="headerlink" title="整页翻"></a>整页翻</h3><p>ctrl+f(forword)<br>ctrl+d(backword)</p>
<h3 id="翻半页"><a href="#翻半页" class="headerlink" title="翻半页"></a>翻半页</h3><p>ctrl+d(down)<br>ctrl+u(up)</p>
<h3 id="滚一行"><a href="#滚一行" class="headerlink" title="滚一行"></a>滚一行</h3><p>ctrl+e<br>ctrl+y</p>
]]></content>
      <categories>
        <category>vim</category>
      </categories>
      <tags>
        <tag>vim 小技巧 教程</tag>
      </tags>
  </entry>
  <entry>
    <title>_vimrc_for_deeping.md</title>
    <url>/2020/12/23/vimrc-for-deeping-md/</url>
    <content><![CDATA[<pre><code class="shell">&quot;source $VIMRUNTIME/vimrc_example.vim

&quot;set diffexpr=MyDiff(
&quot;function MyDiff(
&quot;  let opt = &#39;-a --binary &#39;
&quot;  if &amp;diffopt =~ &#39;icase&#39; | let opt = opt . &#39;-i &#39; | endif
&quot;  if &amp;diffopt =~ &#39;iwhite&#39; | let opt = opt . &#39;-b &#39; | endif
&quot;  let arg1 = v:fname_in
&quot;  if arg1 =~ &#39; &#39; | let arg1 = &#39;&quot;&#39; . arg1 . &#39;&quot;&#39; | endif
&quot;  let arg1 = substitute(arg1, &#39;!&#39;, &#39;\!&#39;, &#39;g&#39;)
&quot;  let arg2 = v:fname_new
&quot;  if arg2 =~ &#39; &#39; | let arg2 = &#39;&quot;&#39; . arg2 . &#39;&quot;&#39; | endif
&quot;  let arg2 = substitute(arg2, &#39;!&#39;, &#39;\!&#39;, &#39;g&#39;)
&quot;  let arg3 = v:fname_out
&quot;  if arg3 =~ &#39; &#39; | let arg3 = &#39;&quot;&#39; . arg3 . &#39;&quot;&#39; | endif
&quot;  let arg3 = substitute(arg3, &#39;!&#39;, &#39;\!&#39;, &#39;g&#39;)
&quot;  if $VIMRUNTIME =~ &#39; &#39;
&quot;    if &amp;sh =~ &#39;\&lt;cmd&#39;
&quot;      if empty(&amp;shellxquote)

&quot;        set shellxquote&amp;
&quot;      endif
&quot;      let cmd = &#39;&quot;&#39; . $VIMRUNTIME . &#39;\diff&quot;&#39;
&quot;    else
&quot;      let cmd = substitute($VIMRUNTIME, &#39; &#39;, &#39;&quot; &#39;, &#39;&#39;) . &#39;\diff&quot;&#39;
&quot;    endif
&quot;  else
&quot;    let cmd = $VIMRUNTIME . &#39;\diff&#39;
&quot;  endif
&quot;  let cmd = substitute(cmd, &#39;!&#39;, &#39;\!&#39;, &#39;g&#39;)
&quot;  silent execute &#39;!&#39; . cmd . &#39; &#39; . opt . arg1 . &#39; &#39; . arg2 . &#39; &gt; &#39; . arg3
&quot;  if exists(&#39;l:shxq_sav&#39;)
&quot;    let &amp;shellxquote=l:shxq_sav
&quot;  endif
&quot;endfunction



&quot;-----------------vim hot key---------------------------
&quot;字符按键以及Shift组合，输入字符
&quot;ENTER，回车键，换行
&quot;BACK SPACE，退格键，删除光标前一个字符
&quot;DEL，删除键，删除光标后一个字符
&quot;方向键，在文本中移动光标
&quot;HOME/END，移动光标到行首/行尾
&quot;Page Up/Page Down，上/下翻页
&quot;Insert，切换光标为输入/替换模式，光标将变成竖线/下划线
&quot;ESC，退出输入模式，切换到命令模式
&quot;-----------------vim hot key--------------------------- 

&quot;-----------------vim hot key---------------------------
&quot;行首0；行尾$; 文本最前gg; 文本最后G
&quot;光标前插入i; 光标后插入a; 光标替换s;向下新建一行o
&quot;当前行首插入I; 当前光标行尾插入A;当前光标整行替换S;向上新建一行O
&quot;查找/&quot;char&quot; 下一个匹配n;上一个匹配N
&quot;删除一个字符x 剪切一行dd
&quot;前一个单词w,下一个单词b
&quot;向下翻页ctr+f,向上翻页ctr+b
&quot;以只读的方式打开
&quot;撤销u,恢复ctrl+r
&quot;滚一行ctrl-e ctrl-y
&quot;zz 让光标所在的行居屏幕中央
&quot;zt 让光标所在的行居屏幕最上一行 t=top
&quot;zb 让光标所在的行居屏幕最下一行 b=bottom
&quot;:reg 查看寄存器
&quot;:help registers 查看register帮助文档
&quot;
&quot;(1)添加多行注释
&quot;c进入命令行模式下，按下Ctrl + v，进入列（也叫区块）模式;
&quot;在行首使用上下键选择需要注释的多行;
&quot;按下键盘（大写）“I”键，进入插入模式；
&quot;然后输入注释符（“/*”、“#”等）;
&quot;最后按下“Esc”键。
&quot;注:在按下esc键后，会稍等一会才会出现注释。
&quot;(2)删除多行注释
&quot;首先按esc进入命令行模式下，按下Ctrl + v, 进入列模式;
&quot;选定要取消注释的多行;
&quot;按下“x”或者“d”.
&quot;注意:如果是“/*”注释，那需要执行两次该操作，如果是“#”注释，一次即可。

&quot;要删除 50 行，则是用 『50dd』 对吧！ 数字加在动作之前，如我要向下移动 20 行呢？那就是『20j』或者是『20↓』即可
&quot;注意要在:在加一个:
&quot;1、在 10 - 20 行添加 /* 注释
&quot;:10,20s#^#/*#g
&quot;2、在 10 - 20 行删除 /* 注释
&quot;:10,20s#^/*##g
&quot;3、在 10 - 20 行添加 # 注释
&quot;:10,20s/^/#/g
&quot;4、在 10 - 20 行删除 # 注释
&quot;:10,20s/#/*g
&quot;--------------vim hot key---------------------------

&quot;--------------------vimium hot key------------------
&quot;j:向下滚动一点
&quot;shift+j上个标签
&quot;shift+k下个标签
&quot;k:向上滚动一点
&quot;gg:到页面最底部
&quot;G:到页面最底部
&quot;d:向下翻一屏
&quot;u:向上翻一屏
&quot;H:后退   
&quot;L: 前进
&quot;x:关闭当前页面   
&quot;X:恢复刚刚关闭的页面
&quot;--------------------vimium hot key------------------

&quot;--------------------Deepin hot key------------------
&quot;关闭窗口alt+f4
&quot;窗口最大话ctrl+上方向键
&quot;super+e正常显示 gio mime inode/directory dde-file-manager.desktop
&quot;--------------------Deepin hot key------------------

&quot;--------------------Linux 常用命令------------------
&quot;poweroff 关机
&quot;shutdown -h now 关机
&quot;reboot 重启
&quot;clear ctrl + l 清屏
&quot;ctrl + a 行首
&quot;ctrl + e 行尾
&quot;ctrl + u 前删清空重输
&quot;ctrl + k 后删清空重输
&quot;ctrl + w 前删一个单词
&quot;ctrl + y 回退
&quot;ctrl + p 查看上一个命令 跟pgup一样(需要映射)
&quot;ctrl + n 查看下一个命令 跟pgdn一样(需要映射)
&quot;ctrl + r 查看命令历史
&quot;--------------------Linux 常用命令------------------

&quot;gvim 下默认保存路经
&quot;exec &#39;cd &#39; . fnameescape(&#39;E:\vimtest&#39;)
&quot;exec &#39;cd &#39; . fnameescape(&#39;/media/bios/办公/deepin&#39;)
exec &#39;cd &#39; . fnameescape(&#39;/media/bios/办公/deepin/code/&#39;)

&quot;恢复原文档
&quot;vim -r filename.file

&quot;设置ctrl + w为保存
&quot;imap &lt;C-s&gt; &lt;Esc&gt;:w&lt;CR&gt;i
&quot;设置jj退出插入模式
imap jj &lt;Esc&gt;b 
&quot;imap &lt;C-[&gt; &lt;Esc&gt;
&quot;imap ;; (;&lt;esc&gt;ha
imap ;; (&quot;); &lt;Esc&gt;hhhi
nmap ;; &lt;Esc&gt;
vmap ;; &lt;Esc&gt;
&quot;&lt;BACKSPACE&gt;
imap /* /**/&lt;Esc&gt;i&lt;Esc&gt;i
imap {}/* {}/*&lt;Esc&gt;i&lt;ENTER&gt;&lt;ENTER&gt;&lt;Esc&gt;ki&lt;TAB&gt;
&quot;imap ( (&quot;)  &lt;Esc&gt;hhhs
&quot;imap (; (&quot;); &lt;Esc&gt;hhhi (可用)
&quot;imap &quot; &quot;&lt;Esc&gt;ha
&quot;设置行号
set nu

 &quot;设置语法高亮
 syntax enable

 &quot;旧版修改中文编码，但会使gvim菜单出现乱码
 &quot;设置中文编码
 &quot;set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
 &quot;set fileencoding=gbk
 &quot;set termencoding=utf-8
 &quot;set encoding=utf-8

 &quot;设置字体
 set gfn=Consolas:h11

 &quot;vim、gvim在windows下中文乱码的终极解决方案:
 &quot;https:/*blog.csdn.net/luyong3435/article/details/37941173
 set encoding=utf-8
 set fileencodings=utf-8,chinese,latin-1
 if has(&quot;win32&quot;)
     set fileencoding=chinese
     else
         set fileencoding=utf-8
         endif
         &quot;解决菜单乱码
         source $VIMRUNTIME/delmenu.vim
         source $VIMRUNTIME/menu.vim
         &quot;解决consle输出乱码
         language messages zh_CN.utf-8


         &quot;再插入模式下生成新的一行
         inoremap &lt;C-j&gt; &lt;Esc&gt;$o

         &quot;突出显示当前行前
         &quot;set cursorline

         &quot; 获取当前目录
         &quot;func GetPWD(
         &quot;    return substitute(getcwd(, &quot;, &quot;, &quot;g&quot;)
         &quot;endf

         &quot;智能对齐
         set smartindent
         set autoindent

         &quot;复制当前行然后向下新建行
         inoremap &lt;C-p&gt; &lt;Esc&gt;yyp

         &quot;查找高亮
         set hlsearch

         &quot; 支持在Visual模式下，通过C-y复制到系统剪切板
         &quot;vnoremap &lt;C-y&gt; &quot;+y
         &quot; 支持在normal模式下，通过C-p粘贴系统剪切板
         &quot;nnoremap &lt;C-p&gt; &quot;*p
         &quot;----------------------------------------
         &quot;https:/*blog.csdn.net/hk2291976/article/details/42196559
         &quot;在inoremap模式下通过&lt;F9&gt;复制到系统剪切板
         &quot;+y    复制到系统剪贴板
         &quot;+p    粘贴
         &quot;+gp  粘贴并且移动光标到粘贴内容后
         &quot;nmap &lt;c-v&gt; &quot;+gp ctrl + c 复制（不推荐使用）
         &quot;nmap &lt;c-c&gt; &quot;+y ctrl + v 粘贴（不推荐使用）
         &quot;---------------------------------------
         &quot;通过&lt;F10&gt;复制到系统剪切板
         nmap &lt;F9&gt; &quot;+y
         imap &lt;F9&gt; &quot;+y
         &quot;通过&lt;F10&gt;粘贴到系统剪切板
         nmap &lt;F10&gt; &quot;+gp
         imap &lt;F10&gt; &quot;+gp


         &quot;nerdtree
         &quot;autocmd VimEnter * NERDTree

         &quot;安装插件
         &quot;pecify a directory for plugins 
         call plug#begin(&#39;~/.vim/plugged&#39;)
         &quot;以安装ycm插件为例
         Plug &#39;mhinz/vim-startify&#39;
         Plug &#39;vim-airline/vim-airline&#39;
         Plug &#39;vim-airline/vim-airline-themes&#39;
         Plug &#39;scrooloose/nerdtree&#39;
         &quot;智能补齐
         &quot;Plug &#39;valloric/youcompleteme&#39;
         &quot;语法高亮
         Plug &#39;flazz/vim-colorschemes&#39;
         Plug &#39;jdsimcoe/panic.vim&#39;
         &quot;代码缩进条
         Plug &#39;yggdroot/indentline&#39;
         &quot;c插件
         &quot;Plug &#39;vim-scripts/c.vim&#39;
         &quot;主题
         Plug &#39;kristijanhusak/vim-hybrid-material&#39;
         &quot;语法高亮
         Plug &#39;leafgarland/typescript-vim&#39;
         call plug#end(

         &quot;try
         &quot;colorscheme colors-solarized
         &quot;
         &quot;set background=light &quot;设置背景颜色
         &quot;colorscheme hybrid_material
         &quot;let g:hybrid_transparent_background = 1

         autocmd BufNewFile *.php,*.js,*.cpp,*.c exec &quot;:call SetComment(&quot; |normal 10Go

         func SetComment(
             if expand(&quot;%:e&quot;) == &#39;php&#39;
                        call setline(1, &quot;&lt;?php&quot;)
                            elseif expand(&quot;%:e&quot;) == &#39;js&#39;
                                    call setline(1, &#39;/*JavaScript file&#39;)
                                        elseif expand(&quot;%:e&quot;) == &#39;cpp&#39;
                                                call setline(1, &#39;/*C++ file&#39;)
                                                    elseif expand(&quot;%:e&quot; == &#39;c&#39;)
                                                            call setline(1, &#39;/*C file&#39;)
                                                                endif
                                                                    call append(1, &#39;/*==============================================================&#39;)
                                                                        call append(2, &#39;*&#39;)
                                                                            call append(3, &#39;*      Filename: &#39;.expand(&quot;%&quot;))
                                                                                call append(4, &#39;*        Author: &#39;)
                                                                                    call append(5, &#39;*   Description: &#39;)
                                                                                        call append(6, &#39;*        Create: &#39;.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
                                                                                            call append(7, &#39;* Last Modified: &#39;.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
                                                                                                call append(8, &#39;*     Compilier: gcc&#39;)
                                                                                                    call append(9,&#39;*    Version: none&#39;)
                                                                                                        call append(10,&#39;*=============================================================*/&#39;)
                                                                                                        endfunc
                                                                                                        map &lt;F2&gt; :call SetComment(&lt;CR&gt;:10&lt;CR&gt;o
                                                                                                        &quot;SET Comment END)*/*/*/)))*/&quot;&quot;))*/&quot;&quot;&quot;))*/*/*/&quot;)*/*/*/*/*/*/*/))</code></pre>
]]></content>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
</search>
